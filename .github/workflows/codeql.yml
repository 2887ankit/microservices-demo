name: codeql

on:
  push: { branches: [ "main" ] }
  pull_request: { branches: [ "main" ] }
  schedule: [ { cron: "28 2 * * 1" } ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: github/codeql-action/init@v3
        with:
          languages: go, javascript, python, java, csharp

      # --- Build Go modules (if any) ---
      - name: Setup Go
        uses: actions/setup-go@v5
        with: { go-version: "1.22" }
      - name: Build Go (best-effort)
        run: |
          set -euo pipefail
          mapfile -t gomods < <(git ls-files '**/go.mod' || true)
          for m in "${gomods[@]}"; do
            dir=$(dirname "$m")
            echo "[GO] building $dir"
            (cd "$dir" && go mod download && go build ./...) || true
          done

      # --- Build Java (Maven/Gradle) ---
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
      - name: Build with Maven (best-effort)
        run: |
          set -euo pipefail
          mapfile -t poms < <(git ls-files '**/pom.xml' || true)
          for p in "${poms[@]}"; do
            echo "[Maven] building $p"
            mvn -q -f "$p" -DskipTests package || true
          done
      - name: Build with Gradle (best-effort)
        run: |
          set -euo pipefail
          mapfile -t gradle_wrappers < <(git ls-files '**/gradlew' || true)
          for g in "${gradle_wrappers[@]}"; do
            dir=$(dirname "$g")
            echo "[Gradle] building $dir"
            (cd "$dir" && chmod +x ./gradlew && ./gradlew build -x test) || true
          done

      # --- Build .NET (cartservice) ---
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with: { dotnet-version: '9.0.x' }
      - name: Build .NET (best-effort)
        run: |
          set -euo pipefail
          mapfile -t csprojs < <(git ls-files '**/*.csproj' || true)
          for c in "${csprojs[@]}"; do
            dir=$(dirname "$c")
            echo "[DOTNET] building $c"
            (cd "$dir" && dotnet restore && dotnet build -c Release) || true
          done

      - uses: github/codeql-action/analyze@v3
        with:
          category: codeql
