name: codeql

on:
  push: { branches: [ "main" ] }
  pull_request: { branches: [ "main" ] }
  schedule: [ { cron: "28 2 * * 1" } ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: github/codeql-action/init@v3
        with:
          languages: go, javascript, python, java, csharp

      # --- Build Go (best-effort) ---
      - uses: actions/setup-go@v5
        with: { go-version: "1.22" }
      - name: Build Go
        run: |
          set -euo pipefail
          mapfile -t mods < <(git ls-files '**/go.mod' || true)
          for m in "${mods[@]}"; do (cd "$(dirname "$m")" && go mod download && go build ./...) || true; done

      # --- Build Java (best-effort) ---
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '21' }
      - name: Build with Maven
        run: |
          set -euo pipefail
          mapfile -t poms < <(git ls-files '**/pom.xml' || true)
          for p in "${poms[@]}"; do mvn -q -f "$p" -DskipTests package || true; done
      - name: Build with Gradle
        run: |
          set -euo pipefail
          mapfile -t gradle_wrappers < <(git ls-files '**/gradlew' || true)
          for g in "${gradle_wrappers[@]}"; do (cd "$(dirname "$g")" && chmod +x ./gradlew && ./gradlew build -x test) || true; done

      # --- Build .NET (cartservice) best-effort ---
      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: '9.0.x' }
      - name: Build .NET
        run: |
          set -euo pipefail
          mapfile -t csprojs < <(git ls-files '**/*.csproj' || true)
          for c in "${csprojs[@]}"; do (cd "$(dirname "$c")" && dotnet restore && dotnet build -c Release) || true; done

      - uses: github/codeql-action/analyze@v3
        with:
          category: codeql
