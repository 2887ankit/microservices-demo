name: Build & Push Online Boutique images to ECR

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - service: adservice
            context: ./src/adservice
            dockerfile: ./src/adservice/Dockerfile
          - service: cartservice
            context: ./src/cartservice/src
            dockerfile: ./src/cartservice/src/Dockerfile
          - service: checkoutservice
            context: ./src/checkoutservice
            dockerfile: ./src/checkoutservice/Dockerfile
          - service: currencyservice
            context: ./src/currencyservice
            dockerfile: ./src/currencyservice/Dockerfile
          - service: emailservice
            context: ./src/emailservice
            dockerfile: ./src/emailservice/Dockerfile
          - service: frontend
            context: ./src/frontend
            dockerfile: ./src/frontend/Dockerfile
          - service: paymentservice
            context: ./src/paymentservice
            dockerfile: ./src/paymentservice/Dockerfile
          - service: productcatalogservice
            context: ./src/productcatalogservice
            dockerfile: ./src/productcatalogservice/Dockerfile
          - service: recommendationservice
            context: ./src/recommendationservice
            dockerfile: ./src/recommendationservice/Dockerfile
          - service: shippingservice
            context: ./src/shippingservice
            dockerfile: ./src/shippingservice/Dockerfile
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ACCOUNT_ID: 105169652730
      ECR_REGISTRY: 105169652730.dkr.ecr.us-east-1.amazonaws.com
      REPO_PREFIX: online-boutique/dev
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::105169652730:role/microservices-demo-gh-oidc-ecr
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag (sha)
        id: meta
        run: echo "TAG_SHA=${GITHUB_SHA}" >> "${GITHUB_OUTPUT}"

      - name: Build & push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.REPO_PREFIX }}/${{ matrix.service }}:${{ steps.meta.outputs.TAG_SHA }}
            ${{ env.ECR_REGISTRY }}/${{ env.REPO_PREFIX }}/${{ matrix.service }}:latest
